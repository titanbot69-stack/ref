
	let pendingReject = null;
	const modalEl = document.getElementById('rejectConfirmModal');
	const rejectIdSpan = document.getElementById('reject-target-id');
	const confirmBtn = document.getElementById('confirm-reject-btn');
	const ackBox = document.getElementById('ack-reject-box');
	let bsModal = null;

	if(modalEl){ bsModal = new bootstrap.Modal(modalEl); }

	ackBox && ackBox.addEventListener('change',()=>{ confirmBtn.disabled = !ackBox.checked; });

	function executeAction(row,eventId,action){
		fetch('/action/update-event-status/',{
			method:'POST',
			headers:{'Content-Type':'application/json','X-CSRFToken':getCookie('csrftoken')},
			body: JSON.stringify({event_id: eventId, action})
		}).then(r=>r.json()).then(d=>{
			if(d.success){
				row.style.transition='opacity .5s';
				row.style.opacity=0;
				setTimeout(()=>row.remove(),500);
			}else{
				alert('Failed: '+(d.error||'Unknown'));
			}
		}).catch(()=>alert('Network error'));
	}

	container.addEventListener('click',function(e){
		const btn = e.target.closest('.btn-action');
		if(!btn) return;
		const row = btn.closest('.request-item');
		if(!row) return;
		const eventId = row.dataset.eventId;
		const action = btn.dataset.action;
		if(action === 'reject'){
			pendingReject = {row,eventId};
			rejectIdSpan.textContent = eventId;
			ackBox.checked = false; confirmBtn.disabled = true;
			bsModal && bsModal.show();
			return;
		}
		executeAction(row,eventId,action);
	});

	confirmBtn && confirmBtn.addEventListener('click',function(){
		if(!pendingReject) return;
		const {row,eventId} = pendingReject;
		bsModal && bsModal.hide();
		executeAction(row,eventId,'reject');
		pendingReject = null;
