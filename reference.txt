    """Initiate a recertification request.

    Supports both traditional navigation (redirect) and AJAX (JSON) POST.
    """
    is_ajax = request.headers.get('x-requested-with') == 'XMLHttpRequest'
    # Accept POST for creation; GET can be deprecated later but kept for backward compatibility
    if request.method not in ['GET', 'POST']:
        return HttpResponseBadRequest('Unsupported method')




        return JsonResponse({'success': False, 'error': 'Employee not found'}, status=404) if is_ajax else redirect('dashboard')


        return JsonResponse({'success': False, 'error': 'Not authorized'}, status=403) if is_ajax else HttpResponseForbidden('Not allowed')


        if is_ajax:
            return JsonResponse({'success': True, 'event_id': event_id, 'message': 'Recertification initiated'})


        logger.error(f"Recertify failed: {e}")

                [event_id, 'Certification Request Failed', request.user.email or '', timezone.now(), 'FAILED']
            )
        if is_ajax:
            return JsonResponse({'success': False, 'error': 'Recertification failed'})
