        // Modal integration variables
        const rejectModalEl = document.getElementById('appOwnerRejectConfirmModal');
        const rejectIdSpan = document.getElementById('app-owner-reject-target-id');
        const confirmRejectBtn = document.getElementById('app-owner-confirm-reject-btn');
        const ackBox = document.getElementById('app-owner-ack-reject-box');
        let pendingReject = null;
        let bsRejectModal = null;
        if(rejectModalEl){ bsRejectModal = new bootstrap.Modal(rejectModalEl); }
        if(ackBox){ ackBox.addEventListener('change', ()=>{ if(confirmRejectBtn) confirmRejectBtn.disabled = !ackBox.checked; }); }

        function performAction(requestItem,eventId,action){






            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    requestItem.style.transition = 'opacity 0.5s';
                    requestItem.style.opacity = '0';
                    setTimeout(() => requestItem.remove(), 500);
                } else {
                    alert('Failed to update event status: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating the event status.');
            });
        }

        requestList.addEventListener('click', function (e) {
            const button = e.target.closest('.btn-app-owner-action');
            if (!button) return;
            const action = button.getAttribute('data-app-owner-action');
            const requestItem = button.closest('.request-item');
            const eventId = requestItem.getAttribute('data-event-id');
            if (!action || !eventId) { console.error('Action or Event ID missing.'); return; }

            if(action === 'reject'){
                pendingReject = { requestItem, eventId };
                if(rejectIdSpan) rejectIdSpan.textContent = eventId;
                if(ackBox){ ackBox.checked = false; }
                if(confirmRejectBtn){ confirmRejectBtn.disabled = true; }
                if(bsRejectModal){ bsRejectModal.show(); }
                return;
            }
            performAction(requestItem,eventId,action);
        });

        if(confirmRejectBtn){
            confirmRejectBtn.addEventListener('click', function(){
                if(!pendingReject) return;
                const {requestItem,eventId} = pendingReject;
                if(bsRejectModal) bsRejectModal.hide();
                performAction(requestItem,eventId,'reject');
                pendingReject = null;
            });
        }
