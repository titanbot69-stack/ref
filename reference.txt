<div class="modal fade" id="adminRejectConfirmModal" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header bg-danger text-white py-2">
				<h6 class="modal-title mb-0">Confirm Rejection</h6>
				<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p class="mb-2">You are about to <strong class="text-danger">Reject</strong> this access request.</p>
				<p class="small text-muted mb-1">Event ID: <span id="admin-reject-target-id" class="fw-semibold"></span></p>
				<ul class="small text-muted mb-3 ps-3">
					<li>This action cannot be undone.</li>
					<li>Status will immediately change to Rejected.</li>
					<li>A new request must be created to restart the flow.</li>
				</ul>
				<div class="form-check">
					<input class="form-check-input" type="checkbox" value="1" id="admin-ack-reject-box">
					<label class="form-check-label small" for="admin-ack-reject-box">I understand and want to proceed.</label>
				</div>
			</div>
			<div class="modal-footer py-2">
				<button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger btn-sm" id="admin-confirm-reject-btn" disabled>Reject Request</button>
			</div>
		</div>
	</div>
</div>
<script>
// Helper: CSRF cookie retrieval



	document.body.addEventListener('click',function(e){
		const btn=e.target.closest('.eye-btn');
		if(btn&&!btn.disabled){
			btn.classList.remove('eye-animate');void btn.offsetWidth;btn.classList.add('eye-animate');
			const roles=btn.getAttribute('data-roles')||'';
			const app=btn.getAttribute('data-app')||'';
			const emp=btn.getAttribute('data-emp')||'';
			const modal=new bootstrap.Modal(document.getElementById('rolesModal'));
			const container=document.getElementById('roles-list-container');
			let html='';
			if(roles.trim()){
				const roleList=roles.split(',').map(r=>r.trim()).filter(Boolean);
				html='<ul class="list-group roles-list-scroll">'+roleList.map(r=>`<li class="list-group-item">${r}</li>`).join('')+'</ul>';
			} else {html='<div class="text-muted">No roles found.</div>';}
			container.innerHTML=`<div class="mb-2"><strong>Employee:</strong> ${emp}</div><div class="mb-2"><strong>Application:</strong> ${app.toUpperCase()}</div>`+html;
			modal.show();
		}
	});



document.addEventListener('DOMContentLoaded',function(){
	const buttons=document.querySelectorAll('.btn-image');
	const tbody=document.getElementById('application-access-table-body');
	if(!tbody)return;
	const selectApp=(btn)=>{buttons.forEach(b=>b.classList.remove('active'));btn.classList.add('active');const app=btn.querySelector('img').alt.toLowerCase();tbody.innerHTML='<tr><td colspan="3" class="text-center">Loading...</td></tr>';fetch(`/get-application-data?app=${app}`).then(r=>r.json()).then(data=>{tbody.innerHTML='';(data.data||[]).forEach(emp=>{const tr=document.createElement('tr');tr.innerHTML=`<td>${emp.emp_code}</td><td>${emp.first_name} ${emp.last_name}</td><td>${emp.business_email}</td>`;tbody.appendChild(tr);});}).catch(()=>{tbody.innerHTML='<tr><td colspan="3" class="text-danger text-center">Error loading</td></tr>';});};
	buttons.forEach(b=>b.addEventListener('click',()=>selectApp(b)));
	const def=document.querySelector('.btn-image.active')||buttons[0];
	if(def)selectApp(def);
});



document.addEventListener('DOMContentLoaded',function(){
	document.querySelectorAll('.modern-search-box input').forEach(inp=>{
		inp.addEventListener('input',function(){
			const targetId=this.getAttribute('data-table-id');
			const table=document.getElementById(targetId);
			if(!table)return;
			const rows=table.querySelectorAll('tbody tr');
			const f=this.value.toLowerCase();
			rows.forEach(r=>{
				const cells=[...r.querySelectorAll('td')];
				const match=cells.some(c=>c.textContent.toLowerCase().includes(f));
				r.style.display=match?'':'none';
			});
		});
	});
});


// Access Request actions with rejection modal

	const modalEl=document.getElementById('adminRejectConfirmModal');
	const rejectIdSpan=document.getElementById('admin-reject-target-id');
	const confirmBtn=document.getElementById('admin-confirm-reject-btn');
	const ackBox=document.getElementById('admin-ack-reject-box');
	let pendingReject=null; let bsModal=null; if(modalEl){bsModal=new bootstrap.Modal(modalEl);} ;
	ackBox && ackBox.addEventListener('change',()=>{confirmBtn.disabled=!ackBox.checked;});



		fetch('/action/update-event-status/',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCookie('csrftoken')},body:JSON.stringify({event_id:eventId,action})}).then(r=>r.json()).then(d=>{if(d.success){row.style.transition='opacity .5s';row.style.opacity=0;setTimeout(()=>row.remove(),500);}else{alert('Failed: '+(d.error||'Unknown'));}}).catch(()=>alert('Network error'));



				rejectIdSpan.textContent=eventId; ackBox.checked=false; confirmBtn.disabled=true; bsModal && bsModal.show(); return;

		if(!pendingReject)return; const {row,eventId}=pendingReject; bsModal && bsModal.hide(); execute(row,eventId,'reject'); pendingReject=null;});
