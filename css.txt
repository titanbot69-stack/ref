    remark = (data.get('remark') or '').strip() if data.get('action') == 'reject' else ''


            # Persist remark if rejecting (DB has remark column in nido_identity_access.event_status)
            if action == 'reject':
                try:
                    cursor.execute(
                        """
                        UPDATE event_status
                        SET assigned_to = %s, assigned_at = %s, eve_status = %s, remark = %s
                        WHERE event_id = %s
                        """,
                        [next_assigned_to, assigned_at, new_status, remark[:150], event_id]
                    )
                except Exception:
                    # Fallback if remark column not present in a given env
                    cursor.execute(
                        """
                        UPDATE event_status
                        SET assigned_to = %s, assigned_at = %s, eve_status = %s
                        WHERE event_id = %s
                        """,
                        [next_assigned_to, assigned_at, new_status, event_id]
                    )
            else:
                cursor.execute(
                    """
                    UPDATE event_status
                    SET assigned_to = %s, assigned_at = %s, eve_status = %s
                    WHERE event_id = %s
                    """,
                    [next_assigned_to, assigned_at, new_status, event_id]
                )




    remark = (data.get('remark') or '').strip() if action == 'reject' else ''

            if action == 'reject':
                try:
                    cursor.execute(
                        """
                        UPDATE event_status
                        SET assigned_to = %s, assigned_at = %s, eve_status = %s, remark = %s
                        WHERE event_id = %s
                        """,
                        [assigned_to, assigned_at, eve_status, remark[:150], event_id]
                    )
                except Exception:
                    cursor.execute(
                        """
                        UPDATE event_status
                        SET assigned_to = %s, assigned_at = %s, eve_status = %s
                        WHERE event_id = %s
                        """,
                        [assigned_to, assigned_at, eve_status, event_id]
                    )
            else:
                cursor.execute(
                    """
                    UPDATE event_status
                    SET assigned_to = %s, assigned_at = %s, eve_status = %s
                    WHERE event_id = %s
                    """,
                    [assigned_to, assigned_at, eve_status, event_id]
                )


