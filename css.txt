document.addEventListener('DOMContentLoaded',function(){
	const revokeModal=document.getElementById('revokeModal');
	const confirmModal=document.getElementById('revConfirmModal');
	if(!revokeModal||!confirmModal) return;
	const apps=['rpulse','dre','ingenious','exponentia','neo','dlp'];
	let baselinePresence={};
	let baselineLoaded=false;
	let targetEmpCode='';
	const empSpanConfirm=document.getElementById('rev-confirm-emp');
	const changeList=document.getElementById('rev-change-list');
	const ackBox=document.getElementById('ack-rev-changes');
	const confirmBtn=document.getElementById('rev-confirm-btn');
	const backBtn=document.getElementById('rev-back-btn');
	const spinner=document.getElementById('rev-confirm-spinner');
	const errorBox=document.getElementById('rev-error-box');
	const bsRevoke=new bootstrap.Modal(revokeModal);
	const bsConfirm=new bootstrap.Modal(confirmModal);

	function showToast(msg,type='success'){
		let holder=document.getElementById('toast-holder');
		if(!holder){holder=document.createElement('div');holder.id='toast-holder';holder.style.position='fixed';holder.style.top='70px';holder.style.right='20px';holder.style.zIndex='1080';document.body.appendChild(holder);} 
		const div=document.createElement('div');
		div.className='alert alert-'+(type==='danger'||type==='error'?'danger':type)+' py-2 px-3 mb-2 shadow-sm';
		div.textContent=msg;holder.appendChild(div);setTimeout(()=>div.remove(),3500);
	}

	revokeModal.addEventListener('show.bs.modal',async ev=>{
		const btn=ev.relatedTarget;baselinePresence={};baselineLoaded=false;errorBox.classList.add('d-none');errorBox.textContent='';
		targetEmpCode=btn.getAttribute('data-emp');const email=btn.getAttribute('data-email');
		document.getElementById('rev-emp').value=targetEmpCode;document.getElementById('rev-email').textContent=email;
		const submitBtn=document.getElementById('rev-submit'); if(submitBtn){submitBtn.disabled=true; submitBtn.dataset.loading='1';}
		try{
			const res=await fetch(`/api/hrms/${targetEmpCode}/presence/`);
			const data=await res.json();
			baselinePresence=data.presence||{};
			apps.forEach(k=>{const el=document.getElementById('chk-'+k);if(!el)return;const has=!!baselinePresence[k];el.checked=has;el.dataset.base=has?'1':'0';});
			baselineLoaded=true;
		}catch(e){
			apps.forEach(k=>{const el=document.getElementById('chk-'+k);if(!el)return;el.checked=false;el.dataset.base='0';});
			baselinePresence={};baselineLoaded=true;
		}finally{if(submitBtn){submitBtn.disabled=false;submitBtn.removeAttribute('data-loading');}}
	});

	document.getElementById('rev-submit').addEventListener('click',function(){
		if(!baselineLoaded){showToast('Still loading current access. Please wait...','warning');return;}
		// Build change summary
		const changes=[];
		apps.forEach(k=>{const el=document.getElementById('chk-'+k); if(!el)return; const newVal=el.checked; const oldVal=el.dataset.base==='1'; if(newVal!==oldVal){changes.push({app:k, action:newVal?'Grant':'Revoke'});} });
		if(!changes.length){showToast('No changes detected','warning');return;}
		changeList.innerHTML=changes.map(c=>`<li class="mb-1 d-flex align-items-center gap-2"><span class="badge bg-${c.action==='Grant'?'success':'danger'} flex-shrink-0" style="min-width:62px;">${c.action}</span><span class="text-capitalize">${c.app}</span></li>`).join('');
		empSpanConfirm.textContent=targetEmpCode; ackBox.checked=false; confirmBtn.disabled=true; errorBox.classList.add('d-none');
		bootstrap.Modal.getInstance(revokeModal).hide();
		bsConfirm.show();
	});

	ackBox && ackBox.addEventListener('change',()=>{confirmBtn.disabled=!ackBox.checked;});
	backBtn && backBtn.addEventListener('click',()=>{bsConfirm.hide();bsRevoke.show();});

	confirmBtn && confirmBtn.addEventListener('click',async()=>{
		confirmBtn.disabled=true; spinner.classList.remove('d-none'); errorBox.classList.add('d-none'); errorBox.textContent='';
		// Prepare form data
		const fd=new FormData(document.getElementById('revokeForm'));
		apps.forEach(k=>fd.set(k,document.getElementById('chk-'+k).checked?'true':'false'));
		try{
			const res=await fetch('/action/revoke-access/',{method:'POST',headers:{'X-CSRFToken':getCookie('csrftoken')},body:fd});
			const data=await res.json().catch(()=>({}));
			if(res.ok && data && (data.ok||data.success)){
				bsConfirm.hide(); showToast('Request submitted');
			} else {
				const msg=(data && (data.error||data.message)) || 'Request failed';
				errorBox.textContent=msg; errorBox.classList.remove('d-none'); confirmBtn.disabled=false;
			}
		}catch(e){errorBox.textContent='Network error'; errorBox.classList.remove('d-none'); confirmBtn.disabled=false;}
		finally{spinner.classList.add('d-none');}
	});
});
